name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: kimia:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test image
        run: |
          echo "ðŸ§ª Running smoke tests..."
          docker run --rm kimia:test --version
          docker run --rm kimia:test --help

      - name: Inspect image
        run: |
          echo "ðŸ“¦ Image details:"
          docker image inspect kimia:test --format '{{.Size}}' | awk '{print "Size: " $1/1024/1024 "MB"}'
          docker image inspect kimia:test --format '{{.Architecture}}'

  # Optional: Add K8s integration tests with kind
  kubernetes-test:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create k8s cluster with kind
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: kimia-test

      - name: Build and load image to kind
        run: |
          docker build -t kimia:test .
          kind load docker-image kimia:test --name kimia-test

      - name: Run Kubernetes tests
        run: |
          echo "ðŸ§ª Running basic k8s deployment test..."
          
          # Create test namespace
          kubectl create namespace kimia-test
          
          # Create basic test job
          kubectl apply -f - <<EOF
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: kimia-version-test
            namespace: kimia-test
          spec:
            template:
              spec:
                containers:
                - name: kimia
                  image: kimia:test
                  imagePullPolicy: Never
                  command: ["kimia", "--version"]
                restartPolicy: Never
            backoffLimit: 1
          EOF
          
          # Wait for job completion
          kubectl wait --for=condition=complete job/kimia-version-test -n kimia-test --timeout=60s
          
          # Check logs
          kubectl logs job/kimia-version-test -n kimia-test
          
          echo "âœ… Kubernetes test passed!"

      - name: Cleanup
        if: always()
        run: |
          kubectl delete namespace kimia-test --ignore-not-found=true

